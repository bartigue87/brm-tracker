{"version":3,"file":"static/js/81.29223fcd.chunk.js","mappings":"gUAce,SAASA,IACtB,IAAMC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GACpBC,GAAWC,EAAAA,EAAAA,OAEfC,EAAAA,EAAAA,YAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,IACH,OAAsDC,EAAAA,EAAAA,KAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WAEvC,GAAkCC,EAAAA,EAAAA,GAChC,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,QAAS,CACPF,MAAO,GACPC,SAAS,GAEXE,YAAa,CACXH,MAAO,GACPC,SAAS,GAEXG,eAAgB,CACdJ,MAAO,GACPC,SAAS,KAGb,GAnBF,eAAOI,EAAP,KAAkBC,EAAlB,KAsBA,SAASC,IACPnB,EAAS,IAAD,OAAKH,EAAKuB,OAAV,gBAAgC,CAAEC,SAAS,IAhCd,wCAmCvC,WAA6BC,GAA7B,wEACEA,EAAMC,iBADR,kBAGUf,EAAY,GAAD,OACZgB,qCADY,aAEf,OACAC,KAAKC,UAAU,CACbf,MAAOM,EAAUU,OAAOhB,MAAMC,MAC9BE,QAASG,EAAUU,OAAOb,QAAQF,MAClCG,YAAaE,EAAUU,OAAOZ,YAAYH,MAC1CI,eAAgBC,EAAUU,OAAOX,eAAeJ,QAElD,CACE,eAAgB,mBAChBgB,cAAc,UAAD,OAAY/B,EAAKgC,SAdtC,OAiBIV,IAjBJ,wGAnCuC,sBAwDvC,OACE,iCACE,SAAC,IAAD,KACA,qBAASW,UAAU,wBAAnB,WACE,eAAIA,UAAU,cAAd,mCACA,SAAC,IAAD,CAAYvB,MAAOA,EAAOwB,QAAStB,KACnC,kBAAMqB,UAAU,OAAOE,SA9DU,4CA8DjC,UACG1B,IAAa,SAAC,IAAD,CAAgB2B,WAAS,KACvC,gBAAKH,UAAU,kBAAf,UACE,SAAC,IAAD,CACEI,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,YAAY,kBACZC,UAAU,6BACVC,WAAY,EAACC,EAAAA,EAAAA,OACbC,QAASxB,OAGb,gBAAKY,UAAU,kBAAf,UACE,SAAC,IAAD,CACEI,GAAG,UACHC,QAAQ,QACRC,KAAK,SACLC,MAAM,UACNC,YAAY,gDACZC,UAAU,8BACVC,WAAY,EAACC,EAAAA,EAAAA,OACbC,QAASxB,OAGb,gBAAKY,UAAU,kBAAf,UACE,SAAC,IAAD,CACEI,GAAG,cACHC,QAAQ,QACRC,KAAK,SACLC,MAAM,aACNC,YAAY,iDACZC,UAAU,8BACVC,WAAY,EAACC,EAAAA,EAAAA,OACbC,QAASxB,OAGb,gBAAKY,UAAU,kBAAf,UACE,SAAC,IAAD,CACEI,GAAG,iBACHC,QAAQ,QACRC,KAAK,SACLC,MAAM,kBACNC,YAAY,4CACZC,UAAU,8BACVC,WAAY,EAACC,EAAAA,EAAAA,OACbC,QAASxB,OAGb,iBAAKyB,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAApC,WACE,SAAC,IAAD,CAAQT,KAAK,SAASU,UAAW7B,EAAUJ,QAA3C,qBAGA,mBAAQkC,QAAS5B,EAAgBW,UAAU,SAA3C,8BAMN,SAAC,IAAD,S","sources":["pages/NewTrackerPage.js"],"sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport \"./NewTrackerPage.css\";\nimport { useNavigate } from \"react-router\";\nimport Input from \"../FormElements/Input\";\nimport { VALIDATOR_REQUIRE } from \"../util/validator\";\nimport Button from \"../FormElements/Button\";\nimport { useForm } from \"../util/form-hook\";\nimport { useHttpClient } from \"../util/http-hook\";\nimport { AuthContext } from \"../util/auth-context\";\nimport ErrorModal from \"../UIElements/ErrorModal\";\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\";\n\nexport default function NewTrackerPage() {\n  const auth = useContext(AuthContext);\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      deposit: {\n        value: \"\",\n        isValid: false,\n      },\n      withdrawals: {\n        value: \"\",\n        isValid: false,\n      },\n      currentBalance: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  function handleRedirect() {\n    navigate(`/${auth.userId}/brm-tracker`, { replace: true });\n  }\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/trackers`,\n        \"POST\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          deposit: formState.inputs.deposit.value,\n          withdrawals: formState.inputs.withdrawals.value,\n          currentBalance: formState.inputs.currentBalance.value,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${auth.token}`,\n        }\n      );\n      handleRedirect();\n    } catch (err) {}\n  }\n\n  return (\n    <>\n      <Navbar />\n      <section className=\"new-tracker-container\">\n        <h1 className=\"page-header\">Create a new Tracker</h1>\n        <ErrorModal error={error} onClear={clearError} />\n        <form className=\"form\" onSubmit={submitHandler}>\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"form-controller\">\n            <Input\n              id=\"title\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Title\"\n              placeholder=\"Which site/app?\"\n              errorText=\"Please enter a valid title\"\n              validators={[VALIDATOR_REQUIRE()]}\n              onInput={inputHandler}\n            />\n          </div>\n          <div className=\"form-controller\">\n            <Input\n              id=\"deposit\"\n              element=\"input\"\n              type=\"number\"\n              label=\"Deposit\"\n              placeholder=\"Enter amount... enter 0 if you didn't deposit\"\n              errorText=\"Please enter a valid number\"\n              validators={[VALIDATOR_REQUIRE()]}\n              onInput={inputHandler}\n            />\n          </div>\n          <div className=\"form-controller\">\n            <Input\n              id=\"withdrawals\"\n              element=\"input\"\n              type=\"number\"\n              label=\"Withdrawal\"\n              placeholder=\"Enter amount... enter 0 if you didn't withdraw\"\n              errorText=\"Please enter a valid number\"\n              validators={[VALIDATOR_REQUIRE()]}\n              onInput={inputHandler}\n            />\n          </div>\n          <div className=\"form-controller\">\n            <Input\n              id=\"currentBalance\"\n              element=\"input\"\n              type=\"number\"\n              label=\"Current Balance\"\n              placeholder=\"Enter the amount of money in your account\"\n              errorText=\"Please enter a valid number\"\n              validators={[VALIDATOR_REQUIRE()]}\n              onInput={inputHandler}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"25px\" }}>\n            <Button type=\"submit\" disabled={!formState.isValid}>\n              Submit\n            </Button>\n            <button onClick={handleRedirect} className=\"button\">\n              Cancel\n            </button>\n          </div>\n        </form>\n      </section>\n      <Footer />\n    </>\n  );\n}\n"],"names":["NewTrackerPage","auth","useContext","AuthContext","navigate","useNavigate","useEffect","window","scrollTo","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","deposit","withdrawals","currentBalance","formState","inputHandler","handleRedirect","userId","replace","event","preventDefault","process","JSON","stringify","inputs","Authorization","token","className","onClear","onSubmit","asOverlay","id","element","type","label","placeholder","errorText","validators","VALIDATOR_REQUIRE","onInput","style","display","gap","disabled","onClick"],"sourceRoot":""}