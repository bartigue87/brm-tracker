{"version":3,"file":"static/js/349.e5602125.chunk.js","mappings":"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","sources":["pages/UpdateTrackerPage.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport \"./NewTrackerPage.css\";\nimport { useNavigate } from \"react-router\";\nimport Input from \"../FormElements/Input\";\nimport { VALIDATOR_REQUIRE } from \"../util/validator\";\nimport Button from \"../FormElements/Button\";\nimport { useForm } from \"../util/form-hook\";\nimport { useHttpClient } from \"../util/http-hook\";\nimport { AuthContext } from \"../util/auth-context\";\nimport ErrorModal from \"../UIElements/ErrorModal\";\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function UpdateTrackerPage() {\n  const auth = useContext(AuthContext);\n  const trackerId = useParams().tid;\n  let navigate = useNavigate();\n  const [loadedTracker, setLoadedTracker] = useState();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      deposit: {\n        value: \"\",\n        isValid: false,\n      },\n      withdrawals: {\n        value: \"\",\n        isValid: false,\n      },\n      currentBalance: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  function handleRedirect() {\n    navigate(`/${auth.userId}/brm-tracker`, { replace: true });\n  }\n\n  useEffect(() => {\n    const fetchTracker = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/trackers/${trackerId}`\n        );\n        console.log(\"responseData\", responseData);\n        setLoadedTracker(responseData.tracker);\n        setFormData(\n          {\n            title: {\n              value: responseData.tracker.title,\n              isValid: true,\n            },\n            deposit: {\n              value: responseData.tracker.desposit,\n              isValid: true,\n            },\n            withdrawals: {\n              value: responseData.tracker.withdrawals,\n              isValid: true,\n            },\n            currentBalance: {\n              value: responseData.tracker.currentBalance,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchTracker();\n  }, [sendRequest, setFormData, trackerId]);\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/trackers/${trackerId}`,\n        \"PATCH\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          deposit: formState.inputs.deposit.value,\n          withdrawals: formState.inputs.withdrawals.value,\n          currentBalance: formState.inputs.currentBalance.value,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${auth.token}`,\n        }\n      );\n      handleRedirect();\n    } catch (err) {}\n  }\n\n  console.log(\"loadedTracker\", loadedTracker);\n  return (\n    <>\n      <Navbar />\n      <section className=\"new-tracker-container\">\n        <h1 className=\"page-header\">Update Tracker</h1>\n        <ErrorModal error={error} onClear={clearError} />\n        {!isLoading && loadedTracker && (\n          <form className=\"form\" onSubmit={submitHandler}>\n            {isLoading && <LoadingSpinner asOverlay />}\n            <div className=\"form-controller\">\n              <Input\n                id=\"title\"\n                element=\"input\"\n                type=\"text\"\n                label=\"Title\"\n                errorText=\"Please enter a valid title\"\n                validators={[VALIDATOR_REQUIRE()]}\n                onInput={inputHandler}\n                initialValue={loadedTracker.title}\n                initialValid={true}\n              />\n            </div>\n            <div className=\"form-controller\">\n              <Input\n                id=\"deposit\"\n                element=\"input\"\n                type=\"number\"\n                label=\"Deposit\"\n                errorText=\"Please enter a valid number\"\n                validators={[VALIDATOR_REQUIRE()]}\n                onInput={inputHandler}\n                initialValue={loadedTracker.deposit}\n                initialValid={true}\n              />\n            </div>\n            <div className=\"form-controller\">\n              <Input\n                id=\"withdrawals\"\n                element=\"input\"\n                type=\"number\"\n                label=\"Withdrawal\"\n                errorText=\"Please enter a valid number\"\n                validators={[VALIDATOR_REQUIRE()]}\n                onInput={inputHandler}\n                initialValue={loadedTracker.withdrawals}\n                initialValid={true}\n              />\n            </div>\n            <div className=\"form-controller\">\n              <Input\n                id=\"currentBalance\"\n                element=\"input\"\n                type=\"number\"\n                label=\"Current Balance\"\n                errorText=\"Please enter a valid number\"\n                validators={[VALIDATOR_REQUIRE()]}\n                onInput={inputHandler}\n                initialValue={loadedTracker.currentBalance}\n                initialValid={true}\n              />\n            </div>\n            <div style={{ display: \"flex\", gap: \"25px\" }}>\n              <Button type=\"submit\" disabled={!formState.isValid}>\n                Submit\n              </Button>\n              <button onClick={handleRedirect} className=\"button\">\n                Cancel\n              </button>\n            </div>\n          </form>\n        )}\n      </section>\n      <Footer />\n    </>\n  );\n}\n"],"names":["UpdateTrackerPage","auth","useContext","AuthContext","trackerId","useParams","tid","navigate","useNavigate","useState","loadedTracker","setLoadedTracker","useEffect","window","scrollTo","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","deposit","withdrawals","currentBalance","formState","inputHandler","setFormData","handleRedirect","userId","replace","event","preventDefault","process","JSON","stringify","inputs","Authorization","token","fetchTracker","responseData","console","log","tracker","desposit","className","onClear","onSubmit","asOverlay","id","element","type","label","errorText","validators","VALIDATOR_REQUIRE","onInput","initialValue","initialValid","style","display","gap","disabled","onClick"],"sourceRoot":""}